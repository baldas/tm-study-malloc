.TH "PAPI_start_counters" 3 "Fri Aug 2 2013" "Version 5.2.0.0" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_start_counters \- 
.PP
Start counting hardware events.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
\fBC Interface:\fP
.RS 4
#include <\fBpapi.h\fP> 
.br
 int PAPI_start_counters( int *events, int array_len );
.RE
.PP
\fBParameters:\fP
.RS 4
\fI*events\fP an array of codes for events such as PAPI_INT_INS or a native event code 
.br
\fIarray_len\fP the number of items in the *events array
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIPAPI_EINVAL\fP One or more of the arguments is invalid. 
.br
\fIPAPI_EISRUN\fP Counters have already been started, you must call PAPI_stop_counters() before you call this function again. 
.br
\fIPAPI_ESYS\fP A system or C library call failed inside PAPI, see the errno variable. 
.br
\fIPAPI_ENOMEM\fP Insufficient memory to complete the operation. 
.br
\fIPAPI_ECNFLCT\fP The underlying counter hardware cannot count this event and other events in the EventSet simultaneously. 
.br
\fIPAPI_ENOEVNT\fP The PAPI preset is not available on the underlying hardware.
.RE
.PP
PAPI_start_counters() starts counting the events named in the *events array. This function cannot be called if the counters have already been started. The user must call PAPI_stop_counters() to stop the events explicitly if he/she wants to call this function again. It is the user's responsibility to choose events that can be counted simultaneously by reading the vendor's documentation. The length of the *events array should be no longer than the value returned by PAPI_num_counters().
.PP
.PP
.nf
if( PAPI_start_counters( Events, num_hwcntrs ) != PAPI_OK )
    handle_error(1);
.fi
.PP
.PP
\fBSee also:\fP
.RS 4
PAPI_stop_counters() PAPI_add_event() PAPI_create_eventset() 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code.
