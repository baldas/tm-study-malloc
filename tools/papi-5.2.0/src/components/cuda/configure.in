# Process this file with autoconf to produce a configure script.
# File: components/cuda/configure.in
# CVS: $Id$


AC_INIT
AC_ARG_WITH(cudrv_dir,
		[  --with-cudrv-dir=<path> Specify path to CUDA driver root directory],
		[CUDRV_DIR=$withval
		CFLAGS="$CFLAGS -I$withval/include"
		LDFLAGS="$LDFLAGS -L$withval/lib64 -Wl,-rpath-link -Wl,$withval/lib64"
		AC_CHECK_LIB([cuda],  
			[cuDeviceGet], 
			[],  
			[AC_MSG_ERROR([Library cuda not found])])],
		[CUDRV_DIR="/usr"])

AC_ARG_WITH(cuda_dir,
		[  --with-cuda-dir=<path>  Specify path to CUDA root directory],
		[CUDA_DIR=$withval
		CFLAGS="$CFLAGS -I$withval/include"
		LDFLAGS="$LDFLAGS -L$withval/lib64 -Wl,-rpath-link -Wl,$withval/lib64"
		AC_CHECK_LIB([cudart],  
			[cudaMalloc], 
			[],  
			[AC_MSG_ERROR([Library cudart not found])])],
		[AC_MSG_ERROR([Component requires path to CUDA root directory])])

AC_ARG_WITH(cupti_dir,
		[  --with-cupti-dir=<path> Specify path to CuPTI root directory],
		[CUPTI_DIR=$withval
		CFLAGS="$CFLAGS -I$withval/include"
		LDFLAGS="$LDFLAGS -L$CUDA_DIR/lib64 -lcudart  -L$withval/lib64 -lcupti -Wl,-rpath,$CUDA_DIR/lib64  -Wl,-rpath,$withval/lib64"
		AC_CHECK_LIB([cupti], 
			[cuptiSubscribe], 
			[],                         
			[AC_MSG_ERROR([library cupti not found])])],
		[AC_MSG_ERROR([Component requires path to CuPTI root directory])])	



nvcc_version=`nvcc -V 2>&1 | tail -n 1 | awk '{printf $5}'`
major=`echo $nvcc_version | sed 's/\([[^.]][[^.]]*\).*/\1/'`
minor=`echo $nvcc_version | sed 's/[[^.]][[^.]]*.\([[^.,]][[^.,]]*\).*/\1/'`

echo "CUDA $major.$minor used"

if test "$major" -lt 4; then
	echo "CUDA $major.$minor not supported"
fi

if test "$major" -eq 4; then
	if test "$minor" -eq 0; then
		CUDA_VERSION="-DCUDA_4_0"
	fi
fi

AC_CONFIG_FILES([Makefile.cuda])
AC_SUBST(CUDA_VERSION)
AC_SUBST(CUDRV_DIR)
AC_SUBST(CUDA_DIR)
AC_SUBST(CUPTI_DIR)
AC_OUTPUT
